import the function
====================
    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

normal cases
============
1. Matrix of ints
    >>> matrix_divided([[1, 2], [3, 4]], 2)
    [[0.5, 1.0], [1.5, 2.0]]

2. Matrix of floats
    >>> matrix_divided([[1.2, 2.2, 3.2], [4.2, 5.2, 6.2]], 3)
    [[0.4, 0.73, 1.07], [1.4, 1.73, 2.07]]

3. Matrix with negative integers
    >>> matrix_divided([[1, -2], [-3, 4]], 2)
    [[0.5, -1.0], [-1.5, 2.0]]

4. Matrix with negative floats
    >>> matrix_divided([[1.2, -2.3, 3.4], [-4.5, 5.6, -6.7]], 3)
    [[0.4, -0.77, 1.13], [-1.5, 1.87, -2.23]]

5. Matrix with a mix of integers and floats
    >>> matrix_divided([[1, 2.2], [3.3, 4]], 2)
    [[0.5, 1.1], [1.65, 2.0]]

3. Single-row matrix
    >>> matrix_divided([[1, 2, 3]], 2)
    [[0.5, 1.0, 1.5]]

4. Single-column matrix
    >>> matrix_divided([[1], [2], [3]], 2)
    [[0.5], [1.0], [1.5]]

5. Matrix of zeros
    >>> matrix_divided([[0, 0], [0, 0]], 2)
    [[0.0, 0.0], [0.0, 0.0]]

edge cases
==========
1. Matrix input is None
    >>> matrix_divided(None, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

2. Matrix input is not a matrix
    >>> matrix_divided(5, 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

3. Matrix input is empty (empty list)
    >>> matrix_divided([], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

4. Matrix input is empty (empty list of lists)
    >>> matrix_divided([[], []], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

5. Matrix input contains non-float/int elements
    >>> matrix_divided([[1, 2], [3, "33"]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

6. Div input is None
    >>> matrix_divided([[1, 2], [3, 4]], None)
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

7. Div input is not a number
    >>> matrix_divided([[1, 2], [3, 4]], "23")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

8. Division by zero
    >>> matrix_divided([[1, 2], [3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

9. Rows of different sizes in the matrix
    >>> matrix_divided([[1, 2], [3, 4, 5]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

10. div is float(inf)
    >>> matrix_divided([[0, 0], [0, 0]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

11. 1 Missing argument
    >>> matrix_divided([[0, 0], [0, 0]])
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

12. 2 Missing arguments
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Valid Input & Output after function operation
=============================================
1. Output rounded to 2 decimal places
    >>> matrix_divided([[1.234, 2.345], [3.456, 4.567]], 2)
    [[0.62, 1.17], [1.73, 2.28]]

2. Input matrix is unmodified
    >>> matrix = [[1, 2], [3, 4]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    [[0.5, 1.0], [1.5, 2.0]]
    >>> matrix
    [[1, 2], [3, 4]]
